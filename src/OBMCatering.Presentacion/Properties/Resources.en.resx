<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BitacoraForm_Filtrar" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="BitacoraForm_Filtros_Desde" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="BitacoraForm_Filtros_Hasta" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="BitacoraForm_Filtros_Tipo" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="BitacoraForm_Filtros_Usuario" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="BitacoraForm_Help_Mensaje" xml:space="preserve">
    <value>In this screen you can query all the event logging of the system and filter them by date, type and user. Event types could be: Information, Warning and Error.</value>
  </data>
  <data name="BitacoraForm_Ingreso" xml:space="preserve">
    <value>Entered to logging screen</value>
  </data>
  <data name="BitacoraForm_Titulo" xml:space="preserve">
    <value>Logging</value>
  </data>
  <data name="ClientesForm_ClienteActualizado" xml:space="preserve">
    <value>The client {0} has been updated</value>
  </data>
  <data name="ClientesForm_ClienteCreado" xml:space="preserve">
    <value>The client {0} has been created</value>
  </data>
  <data name="ClientesForm_Datos_Activo" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="ClientesForm_Datos_CP" xml:space="preserve">
    <value>Zip Code</value>
  </data>
  <data name="ClientesForm_Datos_CUIT" xml:space="preserve">
    <value>CUIT</value>
  </data>
  <data name="ClientesForm_Datos_Domicilio" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="ClientesForm_Datos_Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="ClientesForm_Datos_FechaAlta" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="ClientesForm_Datos_Guardar" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ClientesForm_Datos_Localidad" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="ClientesForm_Datos_Nombre" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ClientesForm_Datos_Provincia" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="ClientesForm_Datos_Telefono" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="ClientesForm_Datos_Tipo" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ClientesForm_Help_Mensaje" xml:space="preserve">
    <value>In this screen you can manage the clients, from creating to updating. Besides the client information, you can also control if they are active or not. An inactive client means that it will not appear in the client list in any of the screens.</value>
  </data>
  <data name="ClientesForm_Ingreso" xml:space="preserve">
    <value>Entered to clients screen</value>
  </data>
  <data name="ClientesForm_Titulo" xml:space="preserve">
    <value>Clients Management</value>
  </data>
  <data name="ContextoPresentacion_Alerta" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="ContextoPresentacion_Error_Detalle" xml:space="preserve">
    <value>{0}. Details: {1}</value>
  </data>
  <data name="ContextoPresentacion_Error_Mensaje" xml:space="preserve">
    <value>An unexpected error occurred</value>
  </data>
  <data name="ContextoPresentacion_Error_Titulo" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ContextoPresentacion_Informacion" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="EmpleadosForm_Datos_Activo" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="EmpleadosForm_Datos_CP" xml:space="preserve">
    <value>Zip Code</value>
  </data>
  <data name="EmpleadosForm_Datos_CUIT" xml:space="preserve">
    <value>CUIT</value>
  </data>
  <data name="EmpleadosForm_Datos_Domicilio" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="EmpleadosForm_Datos_Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmpleadosForm_Datos_FechaAlta" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="EmpleadosForm_Datos_FechaBaja" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="EmpleadosForm_Datos_FechaNacimiento" xml:space="preserve">
    <value>Birth Date</value>
  </data>
  <data name="EmpleadosForm_Datos_Guardar" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="EmpleadosForm_Datos_Localidad" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="EmpleadosForm_Datos_Nombre" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="EmpleadosForm_Datos_Provincia" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="EmpleadosForm_Datos_Telefono" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="EmpleadosForm_EmpleadoActualizado" xml:space="preserve">
    <value>The employee {0} has been updated</value>
  </data>
  <data name="EmpleadosForm_EmpleadoCreado" xml:space="preserve">
    <value>The employee {0} has been created</value>
  </data>
  <data name="EmpleadosForm_Help_Mensaje" xml:space="preserve">
    <value>In this screen you can manage the employees of the company, from creating to updating. Besides the employee information, you can also control if they are active or not. An inactive employee means that it will not appear in the employee list in any of the screens.</value>
  </data>
  <data name="EmpleadosForm_Ingreso" xml:space="preserve">
    <value>Entered to employees screen</value>
  </data>
  <data name="EmpleadosForm_Titulo" xml:space="preserve">
    <value>Employees Management</value>
  </data>
  <data name="FacturasForm_Cobrada" xml:space="preserve">
    <value>Charge</value>
  </data>
  <data name="FacturasForm_Datos_Cliente" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="FacturasForm_Datos_Comensales" xml:space="preserve">
    <value>Diners</value>
  </data>
  <data name="FacturasForm_Datos_Desde" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="FacturasForm_Datos_Fecha" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="FacturasForm_Datos_Hasta" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="FacturasForm_Datos_Precio" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="FacturasForm_Datos_Recetas" xml:space="preserve">
    <value>Recipes</value>
  </data>
  <data name="FacturasForm_FacturaCobrada" xml:space="preserve">
    <value>The invoice to {0} has been marked as charged</value>
  </data>
  <data name="FacturasForm_Help_Mensaje" xml:space="preserve">
    <value>In this screen you can query all the invoices of the orders that the company receives. You can also update its state once they are charged. The invoices are auto generated by the system once the orders are confirmed and accepted, so the invoices will appear in this screen only if the orders have been confirmed and they are ready to be charged.</value>
  </data>
  <data name="FacturasForm_Ingreso" xml:space="preserve">
    <value>Entered to invoices screen</value>
  </data>
  <data name="FacturasForm_Titulo" xml:space="preserve">
    <value>Invoices</value>
  </data>
  <data name="Form_Help_Titulo" xml:space="preserve">
    <value>Help</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Icon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\resources\icon.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Icon-32px" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\resources\icon-32px.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Icon-96px" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\resources\icon-96px.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="IngredientesForm_Datos_Cantidad" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="IngredientesForm_Datos_Guardar" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="IngredientesForm_Datos_Ingrediente" xml:space="preserve">
    <value>Ingredient</value>
  </data>
  <data name="IngredientesForm_Datos_Unidad" xml:space="preserve">
    <value>Unity</value>
  </data>
  <data name="IngredientesForm_Help_Mensaje" xml:space="preserve">
    <value>In this screen you can manage the ingredientes of the different recipes by specifying the ingredient name, the amount and the unit of measure for the specific recipe.</value>
  </data>
  <data name="IngredientesForm_Ingreso" xml:space="preserve">
    <value>Entered to ingredients screen</value>
  </data>
  <data name="IngredientesForm_RecetaActualizada" xml:space="preserve">
    <value>The recipe {0} has been updated</value>
  </data>
  <data name="IngredientesForm_Titulo" xml:space="preserve">
    <value>Ingredients</value>
  </data>
  <data name="InicioForm_Backup_Error" xml:space="preserve">
    <value>An error occurred while trying to create the backup. Please try again</value>
  </data>
  <data name="InicioForm_Backup_Realizado" xml:space="preserve">
    <value>Backup created successfully in '{0}'</value>
  </data>
  <data name="InicioForm_Backup_Titulo" xml:space="preserve">
    <value>Create DataBase Backup</value>
  </data>
  <data name="InicioForm_Datos_FiltroArchivos" xml:space="preserve">
    <value>DataBase Backup files (*.bak)|*.bak</value>
  </data>
  <data name="InicioForm_Menu_Administrar_Clientes" xml:space="preserve">
    <value>Clients</value>
  </data>
  <data name="InicioForm_Menu_Administrar_Empleados" xml:space="preserve">
    <value>Employess</value>
  </data>
  <data name="InicioForm_Menu_Administrar_Proveedores" xml:space="preserve">
    <value>Suppliers</value>
  </data>
  <data name="InicioForm_Menu_Administrar_Titulo" xml:space="preserve">
    <value>Manage</value>
  </data>
  <data name="InicioForm_Menu_Administrar_Usuarios" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="InicioForm_Menu_Bitacora_Ver" xml:space="preserve">
    <value>See</value>
  </data>
  <data name="InicioForm_Menu_Cocina_Pedidos" xml:space="preserve">
    <value>Orders</value>
  </data>
  <data name="InicioForm_Menu_Cocina_Precios" xml:space="preserve">
    <value>Prices</value>
  </data>
  <data name="InicioForm_Menu_Cocina_Recetas" xml:space="preserve">
    <value>Recipes</value>
  </data>
  <data name="InicioForm_Menu_Cocina_Titulo" xml:space="preserve">
    <value>Kitchen</value>
  </data>
  <data name="InicioForm_Menu_Compras_Ordenes" xml:space="preserve">
    <value>Orders</value>
  </data>
  <data name="InicioForm_Menu_Compras_Pagos" xml:space="preserve">
    <value>Payments</value>
  </data>
  <data name="InicioForm_Menu_Compras_Titulo" xml:space="preserve">
    <value>Purchases</value>
  </data>
  <data name="InicioForm_Menu_Opciones_Bitacora" xml:space="preserve">
    <value>Logging</value>
  </data>
  <data name="InicioForm_Menu_Opciones_Datos_Backup" xml:space="preserve">
    <value>Backup</value>
  </data>
  <data name="InicioForm_Menu_Opciones_Datos_Restaurar" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="InicioForm_Menu_Opciones_Datos_Titulo" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="InicioForm_Menu_Opciones_Espaniol" xml:space="preserve">
    <value>Spanish</value>
  </data>
  <data name="InicioForm_Menu_Opciones_Ingles" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="InicioForm_Menu_Opciones_Lenguaje" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="InicioForm_Menu_Opciones_Salir" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="InicioForm_Menu_Opciones_Titulo" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="InicioForm_Menu_Ventas_Facturas" xml:space="preserve">
    <value>Invoices</value>
  </data>
  <data name="InicioForm_Menu_Ventas_Pedidos" xml:space="preserve">
    <value>Orders</value>
  </data>
  <data name="InicioForm_Menu_Ventas_Titulo" xml:space="preserve">
    <value>Sells</value>
  </data>
  <data name="InicioForm_Restaurar_Error" xml:space="preserve">
    <value>An error occurred while trying to restore the DataBase. Please try again</value>
  </data>
  <data name="InicioForm_Restaurar_Titulo" xml:space="preserve">
    <value>Restore DataBase</value>
  </data>
  <data name="InicioForm_Titulo" xml:space="preserve">
    <value>OBM Catering</value>
  </data>
  <data name="LoginForm_CambiarPassword" xml:space="preserve">
    <value>A password change is needed before entering the system. Please try again</value>
  </data>
  <data name="LoginForm_Cancelar" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="LoginForm_ErrorAutenticacion" xml:space="preserve">
    <value>Authentication error. Please try again</value>
  </data>
  <data name="LoginForm_Ingresar" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginForm_IngresarCredenciales" xml:space="preserve">
    <value>Enter User and Password to login to OBM Catering</value>
  </data>
  <data name="LoginForm_Ingreso" xml:space="preserve">
    <value>Entered to login screen</value>
  </data>
  <data name="LoginForm_NuevoPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="LoginForm_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="LoginForm_PasswordReseteado" xml:space="preserve">
    <value>The password has been reset</value>
  </data>
  <data name="LoginForm_Titulo" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginForm_Usuario" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="LoginForm_UsuarioAutenticado" xml:space="preserve">
    <value>The user has been loged in correctly</value>
  </data>
  <data name="OrdenesCompraForm_BotonGuardar_Aprobar" xml:space="preserve">
    <value>Approve</value>
  </data>
  <data name="OrdenesCompraForm_BotonGuardar_Realizada" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="OrdenesCompraForm_Datos_Cliente" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="OrdenesCompraForm_Datos_Estado" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="OrdenesCompraForm_Datos_Fecha" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="OrdenesCompraForm_Datos_Items" xml:space="preserve">
    <value>Items</value>
  </data>
  <data name="OrdenesCompraForm_Datos_Proveedor" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="OrdenesCompraForm_Help_Mensaje" xml:space="preserve">
    <value>In this screen you can query and manage the purchase orders of the system. For each purchase order you can also see the details of the items together with the amount to buy.
The purchase orders are auto generated by the system based on the created and approved orders. Each purchase order belongs to an order, so they are assigned to a company and has all the ingredients needed to cook the receipes for all the people included in the original order.
You can also change the status of the purchase orders, which could be marking them as "Approved" or "Completed". An approval means that the orders are ready to be sent to the suppliers. An order completed means that the products have been bought so a new payment order is auto generated for the associated supplier.</value>
  </data>
  <data name="OrdenesCompraForm_Ingreso" xml:space="preserve">
    <value>Entered to purchase orders screen</value>
  </data>
  <data name="OrdenesCompraForm_OrdenCompraActualizada" xml:space="preserve">
    <value>The purchase order for the order {0} has been updated</value>
  </data>
  <data name="OrdenesCompraForm_OrdenPagoCreada" xml:space="preserve">
    <value>The payment order for the supplier {0} has been created</value>
  </data>
  <data name="OrdenesCompraForm_Titulo" xml:space="preserve">
    <value>Purchase Orders</value>
  </data>
  <data name="OrdenesPagoForm_Datos_Fecha" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="OrdenesPagoForm_Datos_Guardar" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="OrdenesPagoForm_Datos_Items" xml:space="preserve">
    <value>Items</value>
  </data>
  <data name="OrdenesPagoForm_Datos_Pagada" xml:space="preserve">
    <value>Paid</value>
  </data>
  <data name="OrdenesPagoForm_Datos_Proveedor" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="OrdenesPagoForm_Help_Mensaje" xml:space="preserve">
    <value>In this screen you can query and manage the payment orders of the system. For each payment order you can also see the details of the items that have been bought.
The payment orders are auto generated by the system based on the purchase orders. Each payment order belong to a purchase order, so it's assigned to a specific company and also contains the ingredients that have been purchased.
Each payment order can be marked as "Completed" once the payment to the suppliers is done. Once completed, it can be edited again.</value>
  </data>
  <data name="OrdenesPagoForm_Ingreso" xml:space="preserve">
    <value>Entered to payment orders screen</value>
  </data>
  <data name="OrdenesPagoForm_OrdenPagoActualizada" xml:space="preserve">
    <value>The payment order for the supplier {0} has been updated</value>
  </data>
  <data name="OrdenesPagoForm_Titulo" xml:space="preserve">
    <value>Payment Orders</value>
  </data>
  <data name="OrdenesVentaForm_Datos_Aprobada" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="OrdenesVentaForm_Datos_Calcular" xml:space="preserve">
    <value>Calculate</value>
  </data>
  <data name="OrdenesVentaForm_Datos_Cliente" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="OrdenesVentaForm_Datos_Comensales" xml:space="preserve">
    <value>Diners</value>
  </data>
  <data name="OrdenesVentaForm_Datos_Desde" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="OrdenesVentaForm_Datos_Guardar" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="OrdenesVentaForm_Datos_Hasta" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="OrdenesVentaForm_Datos_Precio" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="OrdenesVentaForm_Datos_Recetas" xml:space="preserve">
    <value>Recipes</value>
  </data>
  <data name="OrdenesVentaForm_FacturaCreada" xml:space="preserve">
    <value>The invoice for client {0} has been created</value>
  </data>
  <data name="OrdenesVentaForm_Help_Mensaje" xml:space="preserve">
    <value>In this screen you can create and edit the client orders. You can choose the different recipes, the diners, the client and the dates involved. You can also calculate the price of the order, which is based on the ingredients that each recipe requires and for all the people included in the order.
Once created, you can edit and change the order until it's finally approved. Once approved it cannot be modified again. Approving an order triggers the auto generation of the invoice and the purchase order of the ingredientes needed to cook the recipes for all the diners in the order.</value>
  </data>
  <data name="OrdenesVentaForm_Ingreso" xml:space="preserve">
    <value>Entered to sell orders screen</value>
  </data>
  <data name="OrdenesVentaForm_OrdenCompraCreada" xml:space="preserve">
    <value>The purchase order for client {0} has been created</value>
  </data>
  <data name="OrdenesVentaForm_OrdenVentaActualizada" xml:space="preserve">
    <value>The sell order for client {0} has been updated</value>
  </data>
  <data name="OrdenesVentaForm_OrdenVentaCreada" xml:space="preserve">
    <value>The sell order for client {0} has been created</value>
  </data>
  <data name="OrdenesVentaForm_Titulo" xml:space="preserve">
    <value>Sells Orders</value>
  </data>
  <data name="PedidosForm_Datos_Cliente" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="PedidosForm_Datos_Desde" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="PedidosForm_Datos_Filtrar" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="PedidosForm_Datos_Hasta" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="PedidosForm_Datos_Recetas" xml:space="preserve">
    <value>Recipes</value>
  </data>
  <data name="PedidosForm_Help_Mensaje" xml:space="preserve">
    <value>In this screen you can query all the client orders that have been approved and also filter them by date and client. You can also easily acces to the recipes screen to create and manage them.</value>
  </data>
  <data name="PedidosForm_Ingreso" xml:space="preserve">
    <value>Entered to orders query screen</value>
  </data>
  <data name="PedidosForm_Titulo" xml:space="preserve">
    <value>Orders List</value>
  </data>
  <data name="PreciosForm_Datos_Cantidad" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="PreciosForm_Datos_Guardar" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="PreciosForm_Datos_Ingrediente" xml:space="preserve">
    <value>Ingredient</value>
  </data>
  <data name="PreciosForm_Datos_Precio" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="PreciosForm_Datos_Unidad" xml:space="preserve">
    <value>Unity</value>
  </data>
  <data name="PreciosForm_Help_Mensaje" xml:space="preserve">
    <value>In this screen you can manage the price list of the system. This list is auto generated with the ingredients of the recipes that are created, however the prices by unit and amount must be updated manually. The prices of the recipes are calculated based on this list, according to the ingredients and amounts that they contains.</value>
  </data>
  <data name="PreciosForm_Ingreso" xml:space="preserve">
    <value>Entered to prices list screen</value>
  </data>
  <data name="PreciosForm_ListaActualizada" xml:space="preserve">
    <value>The prices list has been updated for the ingredient '{0}'</value>
  </data>
  <data name="PreciosForm_Titulo" xml:space="preserve">
    <value>Prices List</value>
  </data>
  <data name="ProveedoresForm_Datos_Activo" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="ProveedoresForm_Datos_CodigoPostal" xml:space="preserve">
    <value>Zip Code</value>
  </data>
  <data name="ProveedoresForm_Datos_CUIT" xml:space="preserve">
    <value>CUIT</value>
  </data>
  <data name="ProveedoresForm_Datos_Domicilio" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="ProveedoresForm_Datos_Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="ProveedoresForm_Datos_FechaAlta" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="ProveedoresForm_Datos_FechaBaja" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="ProveedoresForm_Datos_Guardar" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ProveedoresForm_Datos_Localidad" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="ProveedoresForm_Datos_Nombre" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ProveedoresForm_Datos_Provincia" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="ProveedoresForm_Datos_Telefono" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="ProveedoresForm_Help_Mensaje" xml:space="preserve">
    <value>In this screen you can manage the different suppliers, from creating to updating. Besides the supplier information, you can also control if they are active or not. An inactive supplier means that it will not appear in the suppliers list in any of the screens.</value>
  </data>
  <data name="ProveedoresForm_Ingreso" xml:space="preserve">
    <value>Entered to suppliers screen</value>
  </data>
  <data name="ProveedoresForm_ProveedorActualizado" xml:space="preserve">
    <value>The supplier {0} has been updated</value>
  </data>
  <data name="ProveedoresForm_ProveedorCreado" xml:space="preserve">
    <value>The supplier {0} has been created</value>
  </data>
  <data name="ProveedoresForm_Titulo" xml:space="preserve">
    <value>Suppliers Management</value>
  </data>
  <data name="RecetasForm_Datos_Detalle" xml:space="preserve">
    <value>Detail</value>
  </data>
  <data name="RecetasForm_Datos_Guardar" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="RecetasForm_Datos_NoDisponible" xml:space="preserve">
    <value>Not Available</value>
  </data>
  <data name="RecetasForm_Datos_Nombre" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="RecetasForm_Datos_VerDetalle" xml:space="preserve">
    <value>View Details</value>
  </data>
  <data name="RecetasForm_Help_Mensaje" xml:space="preserve">
    <value>In this screen you can create and manage the different recipes, the information and the ingredients. You can also mark them as not available in case you don't want them to be included in the future orders. By default, if any of the ingredientes of the recipes doesn't have a defined price, the recipe will be automatically marked as not available until the price is updated. This means that only the recipes which price can be calculated will be available to be included in the orders.</value>
  </data>
  <data name="RecetasForm_Ingredientes_Ver" xml:space="preserve">
    <value>Ingredients {0}</value>
  </data>
  <data name="RecetasForm_Ingreso" xml:space="preserve">
    <value>Entered to recipes screen</value>
  </data>
  <data name="RecetasForm_RecetaActualizada" xml:space="preserve">
    <value>The recipe {0} has been updated</value>
  </data>
  <data name="RecetasForm_RecetaCreada" xml:space="preserve">
    <value>The recipe {0} has been created</value>
  </data>
  <data name="RecetasForm_Titulo" xml:space="preserve">
    <value>Recipes</value>
  </data>
  <data name="UsuariosForm_Datos_Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="UsuariosForm_Datos_Guardar" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="UsuariosForm_Datos_Nombre" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="UsuariosForm_Datos_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="UsuariosForm_Datos_Perfil" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="UsuariosForm_Datos_Resetear" xml:space="preserve">
    <value>Password Reset</value>
  </data>
  <data name="UsuariosForm_Datos_Usuario" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="UsuariosForm_Help_Mensaje" xml:space="preserve">
    <value>In this screen you can manage the different users of the system, their profiles, create new users and also reset their passwords. When you reset a password, the next time the user tries to login he will be asked to change the password in order to proceed. That's the only way to change a user password, no password reset or user creation could be performed from the login screen or other screen.</value>
  </data>
  <data name="UsuariosForm_Ingreso" xml:space="preserve">
    <value>Entered to users screen</value>
  </data>
  <data name="UsuariosForm_Titulo" xml:space="preserve">
    <value>Users Management</value>
  </data>
  <data name="UsuariosForm_UsuarioActualizado" xml:space="preserve">
    <value>The user {0} has been updated</value>
  </data>
  <data name="UsuariosForm_UsuarioCreado" xml:space="preserve">
    <value>The user {0} has been created</value>
  </data>
</root>